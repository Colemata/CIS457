package gvsu457.Hangman.Server;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;

/**
 * Created by Administrator on 11/23/2016.
 */
public class HangmanServerGUI extends JFrame implements ActionListener {
    public DefaultListModel listModel = new DefaultListModel();
    public Socket socket;
    private JButton guessLetterButton;
    private JTextField guessLetterField;
    private JTextPane imagePanel;
    private JPanel mainPanel;
    private JList letterList;
    public JLabel WordDisplay;
    public static HangmanServerLogic hangmanServerLogic;


    public HangmanServerGUI(String username, HangmanServerLogic hangmanServerLogic) {

        super(username);
        this.hangmanServerLogic = hangmanServerLogic;
        setContentPane(mainPanel);
        letterList.setModel(listModel);
        setVisible(true);
        pack();
        setAllFieldsEnabled(false);
        setLocationRelativeTo(null);

        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent event) {
                hangmanServerLogic.closeSockets();
                dispose();
            }
        });
        guessLetterButton.addActionListener(this);
    }

//    public static void main(String[] args) {
//        hangmanServerLogic = new HangmanServerLogic();
//    }

    public void actionPerformed(ActionEvent e) {

        JComponent event = (JComponent) e.getSource();

        if (event == guessLetterButton) {
            if (guessLetterField.getText().length() > 1) {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "One character only please!");
            } else if (guessLetterField.getText().length() == 0) {

            } else {
                boolean addToList = hangmanServerLogic.guessLetter(guessLetterField.getText());
                if (addToList) {
                    listModel.addElement(guessLetterField.getText());
                }
                guessLetterField.setText("");
            }
        }
        pack();
    }


    public void setAllFieldsEnabled(boolean bool) {
        guessLetterButton.setEnabled(bool);
        guessLetterField.setEnabled(bool);
    }


    public void setImagePanel(ImageIcon image) {
        imagePanel.setText("");
        imagePanel.insertIcon(image);
    }

    public void setWordDisplay(String displayWord) {
        WordDisplay.setText(displayWord);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        guessLetterButton = new JButton();
        guessLetterButton.setText("Guess Letter");
        mainPanel.add(guessLetterButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        guessLetterField = new JTextField();
        guessLetterField.setText("");
        mainPanel.add(guessLetterField, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(444, 22), null, 0, false));
        imagePanel = new JTextPane();
        imagePanel.setText("");
        mainPanel.add(imagePanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(444, 327), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Missed Letters:");
        mainPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        letterList = new JList();
        mainPanel.add(letterList, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        WordDisplay = new JLabel();
        WordDisplay.setFont(new Font("Arial Black", Font.BOLD, 36));
        WordDisplay.setHorizontalAlignment(0);
        WordDisplay.setHorizontalTextPosition(0);
        WordDisplay.setText("_ _ _ _ _");
        mainPanel.add(WordDisplay, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}



